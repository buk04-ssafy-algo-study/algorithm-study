import java.util.*;

class Solution {
    public int solution(int bridge_length, int weight, int[] truck_weights) {
        int time = 0;
        int curWeight = 0;
        Queue<Integer> q = new ArrayDeque<>();
        int idx=0;
        while(true){
            
         
            
            // 다리에 트럭이 1대도 없다면 트럭 올리기
            if(q.isEmpty()) {
                curWeight += truck_weights[idx];
                q.offer(truck_weights[idx]);
                idx++;
              time++;
            }
            
            // 다리가 꽉 차지 않았다면 트럭 올리기
            else if(q.size() != bridge_length && curWeight + truck_weights[idx] <= weight){
                curWeight += truck_weights[idx];
                q.offer(truck_weights[idx]);
                idx++;
                 time++;
            }
            
            else if(q.size() != bridge_length && curWeight + truck_weights[idx] > weight){
                q.offer(0);
                 time++;
            }
            
            // 다리가 꽉 찼다면 맨 앞 트럭 내리기
            else if(q.size() == bridge_length){
                curWeight -= q.poll();
            }
            
            if(idx == truck_weights.length) {
                 break;
            } 
            
       }
        
        return time + bridge_length;
    }
}
