import java.util.*;
import java.io.*;

class Main {

    public static void main(String[] args) throws Exception {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(st.nextToken());

        List<Tree> trees = new ArrayList<>();

        st = new StringTokenizer(br.readLine());
        int[] first = new int[n];

        for (int i = 0; i < n; i++) {
            first[i] = Integer.parseInt(st.nextToken());
        }

        st = new StringTokenizer(br.readLine());
        for (int i = 0; i < n; i++) {
            trees.add(new Tree(first[i], Integer.parseInt(st.nextToken())));
        }

        Collections.sort(trees);

        long res = 0;

        for (int i = 0; i < n; i++) {
            // n일 째애는 성장속도*n 을 더한 것이 나무길이
            res += trees.get(i).now + (long) trees.get(i).grow * i;
        }

        System.out.println(res);
    }

    public static class Tree implements Comparable<Tree> {
        int now, grow;

        public Tree(int now, int grow) {
            this.now = now;
            this.grow = grow;
        }

        @Override
        public int compareTo(Tree o) {
            // 성장 속도를 기준으로 오름차순 정렬
            return this.grow - o.grow;
        }

    }

}
