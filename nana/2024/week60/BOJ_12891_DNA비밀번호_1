import java.util.*;
import java.io.*;

class Main {

    private static int S, P, res;    // P: 부분 문자열 길이
    private static String str;  // 문자열
    private static int[] min;   // 등장해야 하는 최소 개수
    private static int[] count;

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        S = Integer.parseInt(st.nextToken());
        P = Integer.parseInt(st.nextToken());

        str = br.readLine();

        min = new int[4];

        st = new StringTokenizer(br.readLine());
        for (int i = 0; i < 4; i++) {
            min[i] = Integer.parseInt(st.nextToken());
        }

        count = new int[4];

        for (int i = 0; i < P; i++) {

            if (str.charAt(i) == 'A') count[0]++;
            if (str.charAt(i) == 'C') count[1]++;
            if (str.charAt(i) == 'G') count[2]++;
            if (str.charAt(i) == 'T') count[3]++;

        }

        int start = 0;
        int end = P;
        int res = 0;

        while (start <= S - P) {

            // 최소 조건을 충족하면 결과값 ++
            if (min[0] <= count[0] && min[1] <= count[1] && min[2] <= count[2] && min[3] <= count[3]) {
                res++;
            }

            // 시작점 하나는 지움
            if (str.charAt(start) == 'A') count[0]--;
            if (str.charAt(start) == 'C') count[1]--;
            if (str.charAt(start) == 'G') count[2]--;
            if (str.charAt(start) == 'T') count[3]--;

            if (end < S) {
                // 마지막 부분에 하나를 추가
                if (str.charAt(end) == 'A') count[0]++;
                if (str.charAt(end) == 'C') count[1]++;
                if (str.charAt(end) == 'G') count[2]++;
                if (str.charAt(end) == 'T') count[3]++;
            }

            start++;
            end++;
        }

        System.out.println(res);
    }
}
