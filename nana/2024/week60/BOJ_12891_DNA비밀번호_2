import java.util.*;
import java.io.*;

class Main {

    private static int S, P, res;    // P: 부분 문자열 길이
    private static String str;  // 문자열
    private static int[] min;   // 등장해야 하는 최소 개수
    private static int[] count;

    private static void updateCount(Character c, int n) {
        switch (c) {
            case 'A':
                count[0] += n;
                break;
            case 'C':
                count[1] += n;
                break;
            case 'G':
                count[2] += n;
                break;
            case 'T':
                count[3] += n;
                break;
        }
    }

    private static boolean isValid() {

        for (int i = 0; i < 4; i++) {
            if (min[i] > count[i]) return false;
        }

        return true;
    }

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        S = Integer.parseInt(st.nextToken());
        P = Integer.parseInt(st.nextToken());

        str = br.readLine();

        min = new int[4];

        st = new StringTokenizer(br.readLine());
        for (int i = 0; i < 4; i++) {
            min[i] = Integer.parseInt(st.nextToken());
        }

        count = new int[4];

        for (int i = 0; i < P; i++) {
            updateCount(str.charAt(i), 1);
        }

        res = 0;

        for (int start = 0, end = P; end <= S; start++, end++) {
            if (isValid()) {
                res++;
            }

            // 시작점 하나는 지움
            updateCount(str.charAt(start), -1);

            if (end < S) {
                // 마지막 부분에 하나를 추가
                updateCount(str.charAt(end), 1);
            }
        }

        System.out.println(res);
    }
}
